swagger: "2.0"
info:
  description: "This is the API definition for the Employee performance evaluation process."
  version: "1.0.8"
  title: "Performance Evaluation by Woolies"
host: "my.wowcareers.com.au"
basePath: "/"
tags:
- name: "myplan"
  description: "Everything related to my plan"
schemes:
- "http"
paths:


  /employee/Picklist2:
    get:
      tags:
      - "employee"
      operationId: getPicklist
      produces: 
      - "application/json"
      parameters: 
      - name: "picklistId"
        in: "query"
        description: "The Id of the picklist to read"
        required: true
        type: "string"
      - name: "parent"
        in: "query"
        description: "In case it is a nested picklist, the partent Id"
        required: false
        type: "string"            
      responses:
        default:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/Picklist"

  /employee/version:
    get:
      tags:
      - "employee"
      summary: "Returns the version of the API layer"
      operationId: getVersion
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: string


  /employee/getUserDetails:
    get:
      tags:
      - "employee"
      summary: "Returns the User details for the logged in User"
      operationId: getUserDetails
      parameters:
      - name: "userName"
        in: "query"
        description: "the username to retrieve values for"
        required: false
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/UserData" 
            

#######################################################################################################
#######################################################################################################
############################################ Goals ####################################################
#######################################################################################################
#######################################################################################################


  /goals/getGoalProcessDetails:
    get:
      tags:
      - "goals"
      summary: "Retrieves the process details to a user to show which process step and wizard step are current"
      operationId: getGoalProcessDetails
      parameters:
      - name: "userName"
        in: "query"
        description: "the username to retrieve values for"
        required: false
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ProcessDetails"


  /goals/getGoalTemplateId:
    get:
      tags:
      - "goals"
      summary: "OBSOLETE - Return the current Goal Plan Template ID of the logged in Employee"
      operationId: getGoalPlanTemplateId
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/GoalPlanTemplateIdResponse"

  /goals/getGoalPlanTemplates:
    get:
      tags:
      - "goals"
      summary: "Retrieves the details of the Goal Plan Template Id. Chooses the current one by default, but can be switched to a different Goal Plan Template Id"
      operationId: getGoalPlanTemplates
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            title: goalPlanResponse
            properties:
              defaultGoalPlanTemplateId:
                type: string
              goalPlanTemplates:
                type: array
                items:
                  $ref: "#/definitions/GoalPlanTemplate"

  /goals/getGoalTemplatePicklists:
    get:
      tags:
      - "goals"
      summary: "OBSOLETE - Returns the defined Picklists for the Goal Templates"
      operationId: getGoalTemplatePicklists
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/GoalPlanPicklistsResponse"
            
  /goals/getGoalsForUserByCategory:
    get:
      tags:
      - "goals"
      summary: "Returns all goals stored against a goal plan for a specific user in a selected year"
      operationId: getGoalsForUserByCategory
      parameters:
      - name: "userName"
        in: "query"
        description: "the username to retrieve values for"
        required: false
        type: string
      - name: "goalTemplateId"
        in: "query"
        description: "the ID of the goal template to retrieve the the goals from. Defaulted to the current goal template "
        required: false
        type: string
      - name: "categoryId"
        in: "query"
        description: "The category that the result should be limited to"
        required: false
        type: string      
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/GoalsForUser"

  /goals/getGoalsForUserFlat:
    get:
      tags:
      - "goals"
      summary: "Returns all goals stored against a goal plan for a specific user in a selected year. The result list is flat and does not have structure regarding the category"
      operationId: getGoalsForUserFlag
      parameters:
      - name: "userName"
        in: "query"
        description: "the username to retrieve values for"
        required: false
        type: string
      - name: "goalTemplateId"
        in: "query"
        description: "the ID of the goal template to retrieve the the goals from. Defaulted to the current goal template "
        required: false
        type: string
      - name: "categoryId"
        in: "query"
        description: "The category that the result should be limited to"
        required: false
        type: string      
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            properties:
              goals:
                type: array
                items:
                  $ref: "#/definitions/Goal"


  /goals/upsertGoalsByCategory:
    post:
      tags:
      - "goals"
      summary: "Upsert one or many goals against SuccessFactors"
      operationId: upsertGoalsByCategory
      parameters:
      - name: "goals"
        in: "body"
        description: "the goals to import"
        required: true
        schema: 
          $ref: "#/definitions/GoalsForUser"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ResponseData"

  /goals/upsertGoalsFlat:
    post:
      tags:
      - "goals"
      summary: "Upsert one or many goals against SuccessFactors"
      operationId: upsertGoalsFlat
      parameters:
      - name: "goals"
        in: "body"
        description: "the goals to import"
        required: true
        schema: 
          type: object
          properties:
            goals:
              type: array
              items:
                $ref: "#/definitions/Goal"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ResponseData"

  /goals/showSplashPage:
    get:
      tags:
      - "goals"
      summary: "Checks whether to show a splash page for the user in the particular context. The context itself is a key that can be used by the administrator to use different splash pages at different stages in the application"
      operationId: showSplashPage
      parameters:
      - name: "goalTemplateId"
        in: "query"
        description: "the ID of the goal template to retrieve the the goals from. Defaulted to the current goal template"
        required: false
        type: string
      - name: "context"
        in: "query"
        description: "The context in which the application is checking whether to display the splash page"
        required: true
        type: string      
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            title: splashPageResponse
            properties:
              showSplashPage:
                type: boolean
    
  /goals/getUserContext:
    get:
      tags:
      - "goals"
      summary: "Retrieves the user specific settings that the application users in order to determine behavior. This is used e.g. to remember that a user acknowledged the splash page and other user dialogs"
      operationId: getUserContext
      parameters:
      - name: "goalTemplateId"
        in: "query"
        description: "the ID of the goal template to retrieve the the goals from. Defaulted to the current goal template"
        required: false
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            title: userContextResponse
            properties:
              userContextSettings:
                type: array
                items:
                  $ref: "#/definitions/UserContextSetting"
    
  /goals/getExampleGoalForCategory:
    get:
      tags:
      - "goals"
      summary: "Retrieves the Example Goal for a specific business unit and for a category"
      operationId: getExampleGoalForCategory
      parameters:
      - name: "positionId"
        in: "query"
        description: "The positionId of the user for which the Example Goals should be retrieved."
        required: false
        type: string
      - name: "category"
        in: "query"
        description: "the category to which to select the Example Goal for"
        required: true
        type: string
      - name: "brandId"
        in: "query"
        description: "the brandId to which to select the Example Goal for"
        required: true
        type: string
      - name: "goalPlanTemplateId"
        in: "query"
        description: "the goalPlanTemplateId to which to select the Example Goal for"
        required: true
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            title: exampleGoal
            properties:
              exampleGoal:
                $ref: "#/definitions/Goal"
  
  /goals/acknowledgeSplashPage:
    post:
      tags:
      - "goals"
      summary: "Indicates that the user has seen and acknowledges the splash page shown in the application. This updates the user context with the information that it will not be shown again the next time the application is started"
      operationId: acknowledgeSplashPage
      parameters:
      - name: "goalPlanTemplateId"
        in: "query"
        description: "the goal plan template Id for which the splash page is acknowledged"
        required: true
        type: string
      produces:
      - "application/json"
      responses:
        201:
          description: "operation successful"
          schema:
            $ref: "#/definitions/ResponseData"
        204:
          description: "user has already acknowledged"
          schema:
            $ref: "#/definitions/ResponseData"
              
  /employee/getTeamMemberDetails:
    get:
      tags:
      - "employee"
      summary: "Retrieves the Team Members for a Team Leader, including the stage of the Goal Setting Process"
      operationId: getTeamMemberDetails
      parameters:
      - name: "goalPlanTemplateId"
        in: "query"
        description: "the goal plan template Id for which to execute the preparation"
        required: true
        type: string
      - name: "readGoalStage"
        in: "query"
        description: "If the parameter is present and true, the Goal Stage should be read"
        required: false
        type: boolean
      - name: "checkIsMemberTeamLead"
        in: "query"
        description: "If the parameter is present and true, checks whether the team member is also a team lead"
        required: false
        type: boolean
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object
            title: teamMembers
            properties:
              teamMembers:
                type: array
                items:
                  $ref: "#/definitions/TeamMemberDetails"

  /goals/prepareFirstTimeGoalSetting:
    post:
      tags:
      - "goals"
      summary: "Reads all assigned goals to a user and saves them in the goal plan for this year"
      operationId: prepareFirstTimeGoalSetting
      parameters:
      - name: "goalPlanTemplateId"
        in: "query"
        description: "the goal plan template Id for which to execute the preparation"
        required: true
        type: string
      - name: "positionID"
        in: "query"
        description: "the goal plan template Id for which to execute the preparation"
        required: true
        type: string
      - name: "brandID"
        in: "query"
        description: "the goal plan template Id for which to execute the preparation"
        required: true
        type: string
      produces:
      - "application/json"
      responses:
        201:
          description: "operation successful"
          schema:
            $ref: "#/definitions/ResponseData"
        204:
          description: "Preparation already performed"
          schema:
            $ref: "#/definitions/ResponseData"
          
#######################################################################################################
#######################################################################################################
############################################ Definitions ##############################################
#######################################################################################################
#######################################################################################################

definitions:
  ResponseData:
    type: "object"
    properties:
      key:
        type: "string"
      editStatus:
        type: "string"
      status:
        type: "string"
      message:
        type: "string"  
    xml:
      name: "User"    

  Picklist:
    type: "object"
    properties:
      PickListValues:
        type: array
        items:
          $ref: '#/definitions/PicklistOption'
  
  PicklistOption:
    type: object
    properties:
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode:
        type: string
      locale: 
        type: string
        
  PicklistOptionWithBGElement:
    type: object
    properties:
      backgroundElementId:
        type: string
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode:
        type: string
      locale: 
        type: string      

  Email:
    type: object
    properties:
      SubscriberKey: 
        type: string
      Address: 
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Body:
        type: string  

  GoalPlanPicklists:
    type: array
    items: 
      $ref: "#/definitions/GoalPlanPicklist"
      
  GoalPlanPicklist:
    type: object
    properties:
      picklistId: 
        type: string
        description: "field Id of the enum structure"
      key:
        type: string
        description: "value of the enum structure"
      label:
        type: string
      goalPlanId:
        type: string
        
  UserData:
    type: object
    properties:
      username:
        type: string
      firstName:
        type: string
      employeeId:
        type: string
      lastName:
        type: string
      jobCode:
        type: string
      jobId:
        type: string
      department:
        type: string
      departmentId:
        type: string
      photo:
        type: string
      division:
        type: string
      businessUnitId:
        type: string
      businessUnit:
        description: "custom08-businessUnit of the user"
        type: string
      
  ProcessDetails:
    type: object
    properties:
      processStep:
        type: string
      wizardStep:
        type: string

  MeasureOfSuccess:
    type: object
    properties:
      description:
        type: string
      done:
        description: "Percent complete of the Goal"
        type: string

  
  AvailableTag:
    type: object
    properties:
      fieldId: 
        type: string
      label:
        type: string
      planId: 
        type: string
      value:
        type: string
      isSelected:
        type: boolean
  
  Feedback:
    type: object
    properties:
      id:
        type: string
        format: date
      commentator:
        type: string
      content:
        type: string
      lastModified:
        type: string
        format: date

  Goal:
    type: object
    properties:
      id:
        type: string
      name: 
        type: string
        description: "Stores the title of the goal"
      type:
        type: string
      state: 
        type: string
        description: "Stores the state of the goal"
      stateLabel: 
        type: string
        description: "The label of the current state"
      primaryTag:
        type: string
        description: "Updates customTag1"
      secondaryTag:
        type: string
        description: "Updates customTag2"
      visibility:
        type: string
        description: "Updates permissions/privateAccess"
      currentOwner: 
        type: string
      createdBy:
        type: string
        description: "Updates customcreatedby"
      category:
        type: string
      startDate:
        type: string
        format: date
      dueDate:
        type: string
        format: date
      hasChanged:
        type: string
        format: boolean
      measuresOfSuccess:
        type: array
        items:
          $ref: "#/definitions/MeasureOfSuccess"
      feedback:
        type: array
        items:
          $ref: "#/definitions/Feedback"
      availableTags:
        type: array
        items:
          $ref: "#/definitions/AvailableTag"

  GoalsForCategory:
    type: object
    properties:
      categoryId:
        type: string
      categoryLabel:
        type: string
      goals:
        type: array
        items:
          $ref: "#/definitions/Goal"
          
  GoalPlanTemplateIdResponse:
    type: object
    properties:
      goalPlanTemplateId: 
        type: string
  
  GoalPlanPicklistsResponse:
    type: object
    properties:
      picklists:
        type: object
        $ref: "#/definitions/GoalPlanPicklists"

  GoalsForUser:
    type: object
    properties:
      categories:
        type: array
        items:
          $ref: "#/definitions/GoalsForCategory"
          
  KeyValuePair:
    type: object
    properties:
      key:
        type: string
      value: 
        type: string
        
  UserContextSetting:
    type: object
    properties:
      context:
        type: string
      goalPlanTemplateId:
        type: string
      value: 
        type: string

  TeamMemberDetails:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      isTeamLeader:
        type: string
        format: boolean
      goalSettingStage:
        type: string
  
  GoalPlanTemplate:
    type: object
    properties:
      planId:
        type: string
      planLabel: 
        type: string
      picklists:
        $ref: "#/definitions/GoalPlanPicklists"
        
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"