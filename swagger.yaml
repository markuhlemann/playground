swagger: "2.0"
info:
  description: "This is Woolworths Candidate enrollment server."
  version: "1.0.0"
  title: "Candidate Profile"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@accenture.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "wowcareers.com.au"
basePath: "/v2"
tags:
- name: "profile"
  description: "Everything about Candidates"
- name: "utils"
  description: "Utility methods, like Picklist Service"
schemes:
- "http"
paths:
  
  /candidate/upsertCandidate:
    post:
      tags:
      - "candidate"
      summary: "Create or updates candidate"
      description: "Creates a candidate if no candidate id is provided. Update the candidate if candidate id is provided in query string."
      operationId: "upsertCandidate"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "candidateData"
        description: "Posted candidate object"
        required: true
        schema:
            $ref: "#/definitions/UpsertCandidate"
      - name: "candidateId"
        in: "query"
        description: "Field name eg candidate Id"
        required: true
        type: string      
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    
          
  /candidate/login:
    get:
      tags:
      - "candidate"
      summary: "Logs candidate into the system"
      description: ""
      operationId: "loginCandidate"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "candidatename"
        in: "query"
        description: "The candidate name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the candidate"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid candidatename/password supplied"
          
  /candidate/logout:
    get:
      tags:
      - "candidate"
      summary: "Logs out current logged in candidate session"
      description: ""
      operationId: "logoutCandidate"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"        
          
  /candidate/candidateExists:
    get:
      tags:
      - "candidate"
      summary: "Get candidate by candidate email"
      description: check whether a candidate already exists
      operationId: checkCandidate
      produces:
      - "application/json"
      parameters:
      - name: "key"
        in: "query"
        description: "Field name eg primaryEmail"
        required: true
        type: string
      - name: "value"
        in: "query"
        description: "Value of field  eg email address"
        required: true
        type: string  
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    

  /candidate/{candidateId}/GenerateGTKYQuiz:
    get:
      tags:
      - "candidate"
      summary: "Generates the Getting to Know You Questions for a candidate"
      operationId: "generateGTKYQuiz"
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "path"
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/GTKYResponse"

  /Picklist:
    get:
      tags:
      - "utils"
      operationId: getPicklist
      produces: 
      - "application/json"
      parameters: 
      - name: "picklistId"
        in: "query"
        description: "The Id of the picklist to read"
        required: true
        type: "string"
      - name: "parent"
        in: "query"
        description: "In case it is a nested picklist, the partent Id"
        required: false
        type: "string"            
      responses:
        default:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/Picklist"
          
definitions:
  Candidate:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
      
  ResponseData:
    type: "object"
    properties:
      candidateId:
        type: "string"
      editStatus:
        type: "string"
      status:
        type: "string"
      message:
        type: "string"  
    xml:
      name: "User"        
      
  UpsertCandidate:
    type: "string"
    properties:
      candidateData:
        type: "string"
    xml:
      name: "User"            
 
  Picklist:
    type: "object"
    properties:
      PickListValues:
        type: array
        items:
          $ref: '#/definitions/PicklistOption'
  
  PicklistOption:
    type: object
    properties:
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode:
        type: string
      locale: 
        type: string

  GTKYResponse:
    type: object
    properties:
      gtkyQuizDate:
        type: string
        format: date
      gtkyExpiry:
        type: string
        format: date
      gtykOverallBenchmark:
        type: string
      gtykOverallScore:
        type: string
      gtykStatus:
        type: string
      gtkyQuestionList:
        $ref: "#/definitions/GTKYQuestionList"

  GTKYQuestionList:
    type: object
    title: "Question and Answers"
        
  GTKYAnswer:
    type: "object"
    properties:
      picklistId:
        description: "The picklist ID of the question this answer belongs to"
        type: "string"
      answer:
        description: "The answer text"
        type: "string"
      optionId: 
        description: "The PicklistOptionId of the answer"
        type: "string"
    
  GTKYQuestion:
    type: "object"
    properties:
      questionPicklistId:
        type: "string"
      questionText:
        type: string
      answers:
        type: "array"
        items:
          $ref: "#/definitions/GTKYAnswer"
    
  GTKYQuizResult:
    type: "object"
    properties:
      gtkyExpiry: 
        type: "string"
    
 
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"