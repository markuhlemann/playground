swagger: "2.0"
info:
  description: "This is the API definition for the Talent Acquisition and Onboarding solution. Based on SuccessFactors Recruitment Management, intended for Candidates and Hiring Managers"
  version: "1.0.43"
  title: "Talent Acquisition and Onboarding"
host: "my.wowcareers.com.au"
basePath: "/"
tags:
- name: "candidate"
  description: "Everything about Candidate Profile"
- name: "application"
  description: "Services around the opportunities presented to the Candidate and Application"
schemes:
- "http"
paths:
  
  /candidate/createCandidate:
    post:
      tags:
      - "candidate"
      summary: "Creates a Candidate"
      description: "Creates a candidate in SuccessFactors"
      operationId: "createCandidate"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "candidateData"
        description: "Posted candidate object"
        required: true 
        schema:
            $ref: "#/definitions/UpsertCandidate"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    
  
  /candidate/upsertCandidate:
    post:
      tags:
      - "candidate"
      summary: "Updates a candidate"
      description: "Updates the candidate in SuccessFactors."
      operationId: "upsertCandidate"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "candidateData"
        description: "Posted candidate object"
        required: true 
        schema:
            $ref: "#/definitions/UpsertCandidate"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    
  
  /candidate/resetPassword:
    post:
      tags:
      - "candidate"
      summary: "Resets the password of the candidate on the Candidate Entity"
      operationId: "resetPassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "password"
        in: "body"
        description: "The password to reset"
        required: true
        schema:
          $ref: "#/definitions/CandidatePassword"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    
  
  /candidate/upsertPreferredStores:
    post:
      tags:
      - "candidate"
      summary: "Updates candidate Preferred Stores"
      description: "Update the candidate Preferred Stores."
      operationId: "upsertPreferredStores"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "candidateData"
        description: "Posted candidate object"
        required: true
        schema:
            $ref: "#/definitions/UpsertCandidate"
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    
          
  /candidate/exists:
    get:
      tags:
      - "candidate"
      summary: "Get candidate by candidate email"
      description: check whether a candidate already exists
      operationId: checkCandidateExists
      produces:
      - "application/json"
      parameters:
      - name: "primaryEmail"
        in: "query"
        description: "the primary email of the candidate"
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:  
            title: candidateExists
            type: boolean
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found" 


  /candidate/uploadResume:
    post:
      tags:
      - "candidate"
      summary: "Uploads the candidate Resume"
      description: "Uploads the candidate Resume."
      operationId: "uploadResume"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "attachment"
        description: "File Attachment"
        required: true
        type: file
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/UploadResume"
        400:
          description: "Invalid candidate id supplied"
        404:
          description: "Upload went wrong"   
  
  /candidate/uploadSupportingDocument:
    post:
      tags:
      - "candidate"
      summary: "Uploads the supporting document"
      description: "Uploads the supporting document."
      operationId: "uploadSupportingDocument"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "applicationId"
        description: "Application Id"
        required: true
        type: string
      - in: "query"
        name: "reqDocType"
        description: "Required Document Type"
        required: true
        type: string
      - in: "formData"
        name: "rightToWorkDoc"
        description: "Right to Work document"
        required: false
        type: file
      - in: "formData"
        name: "tradeCertificateDoc"
        description: "Trade Certificate Attachment"
        required: false
        type: file
      - in: "formData"
        name: "driverLicenseDoc"
        description: "Forklift Driver’s License Attachment"
        required: false
        type: file
      - in: "formData"
        name: "responsibleServiceAlcoholDoc"
        description: "Responsible Service of Alcohol"
        required: false
        type: file
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"

  /candidate/upsertAvatar:
    post:
      tags:
      - "candidate"
      summary: "Uploads the Avatar profile image to the Candidate Entity"
      operationId: "upsertAvatar"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "attachment"
        description: "File Attachment"
        required: true
        type: file
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid candidate id supplied"
        404:
          description: "Candidate not found"    

  /candidate/Picklist2:
    get:
      tags:
      - "candidate"
      operationId: getPicklist
      produces: 
      - "application/json"
      parameters: 
      - name: "picklistId"
        in: "query"
        description: "The Id of the picklist to read"
        required: true
        type: "string"
      - name: "parent"
        in: "query"
        description: "In case it is a nested picklist, the partent Id"
        required: false
        type: "string"            
      responses:
        default:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/Picklist"

  /candidate/Picklist2/getOptionByExternalCode:
    get:
      tags:
      - "candidate"
      operationId: getPicklistOptionByExternalCode
      produces: 
      - "application/json"
      parameters: 
      - name: "picklistId"
        in: "query"
        description: "The Id of the picklist to read"
        required: true
        type: "string"
      - name: "externalCode"
        in: "query"
        description: "The external code of the value to be retrieved"
        required: false
        type: "string"            
      responses:
        default:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/PicklistOption"
            
  /candidate/Picklist2/cleanCache:
    get:
      tags:
      - "candidate"
      operationId: cleanPicklistCache
      description: "Cleans the Picklist cache"
      produces:
      - "application/json"
      responses:
        default:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
          

  /candidate/GenerateGTKYQuiz: 
    get:
      tags:
      - "candidate"
      summary: "Generates the Getting to Know You Questions for a candidate"
      operationId: "generateGTKYQuiz"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object

  /candidate/evaluateGTKYQuiz:
    post:
      tags:
      - "candidate"
      summary: "Evaluates the Getting to Know You Quiz"
      operationId: "evaluateGTKYQuiz"
      produces:
      - "application/json"
      parameters:
      - name: quizBody
        in: body
        required: true
        schema:
          type: string
      responses:
        200:
          description: "successful operation"
          schema:  
            type: object

  /candidate/version:
    get:
      tags:
      - "candidate"
      summary: "Returns the version of the API layer"
      operationId: getVersion
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:  
            type: string


  /candidate/CandidateSummary:
    get:
      tags:
      - "candidate"
      summary: "Retrieving information for the Candidate"
      operationId: getCandidateSummary
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/CandidateSummaryBody"

  /candidate/CandidateHeader:
    get:
      tags:
      - "candidate"
      summary: "Retrieving only the Header information of a Candidate (Firstname, Lastname)"
      operationId: getCandidateHeader
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/CandidateHeader" 
      
            
  /candidate/application/getAgenda:
    get:
      tags:
      - "application"
      summary: Retrieves the Agenda information for the Candidate
      operationId: getAgenda
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/CandidateAgendaList"


  /candidate/myToDoList/jobsApplied:
    get:
      tags:
      - "application"
      summary: "Get candidates To Do List"
      description: "Get candidates To Do data from SF according to the Stage"
      operationId: getJobsApplied
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            title: applications
            type: array
            items:
              $ref: "#/definitions/ApplicationDetails"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"            

  /candidate/myToDoList/jobsInvited:
    get:
      tags:
      - "application"
      summary: "Get candidates To Do List"
      description: "Get candidates To Do data from SF according to the Stage"
      operationId: getJobsInvited
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            title: applications
            type: array
            items:
              $ref: "#/definitions/ApplicationDetails"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"            

  /candidate/myToDoList/profileTasks:
    get:
      tags:
      - "application"
      summary: "Get candidates To Do List"
      description: "Get candidates To Do data from SF according to the Stage"
      operationId: getToDoProfileTasks
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            title: ProfileToDoList
            type: object
            properties:
              retakeGTKYTest:
                type: boolean
              newGTKYTest:
                type: boolean
              missingWorkHistory:
                type: boolean
              missingWorkingPreferences:
                type: boolean
              date:
                type: string
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"            
   
  /candidate/removeAttachment:
    post:
      tags:
      - "candidate"
      summary: "Delete the attachment"
      operationId: "removeAttachment"
      parameters:
      - name: AttachmentInput
        in: body
        required: true
        schema:
          $ref: "#/definitions/AttachmentInputData"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Deletion of Attachment failed"
          schema: 
            $ref: "#/definitions/ResponseData"         

#######################################################################################################
#######################################################################################################
########################################### Application Operations ####################################
#######################################################################################################
#######################################################################################################
    
  /candidate/application/candidateIsInterested:
    post:
      tags:
      - "application"
      summary: Creates a new Application Object, as the candidate is interested in the role
      operationId: updateCandidateIsInterested
      parameters:
      - name: requisitionId
        in: query
        required: true
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Creation of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"

  /candidate/application/candidateIsNotInterested:
    post:
      tags:
      - "application"
      summary: Updates the JobApplication with the response from the Candidat whether he is interested or not
      operationId: updateCandidateIsNotInterested
      parameters:
      - name: applicationData
        in: body
        required: true
        schema:
          $ref: "#/definitions/CandidateNotInterestedInput"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Update of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"
    
  
  /candidate/application/getHFATestDetails:
    get:
      tags:
      - "application"
      summary: Retrieves the details of the Hire for Attitude test
      operationId: getHFATestDetails
      parameters:
      - name: applicationId
        in: query
        required: true
        type: string
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation, returns the link to the Hire for Attitude test"
          schema: 
            $ref: "#/definitions/HFATestDetails"
        400:
          description: "Update of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"
    
  /candidate/application/updateHFATestQuestion:
    post:
      tags:
      - "application"
      summary: Updates the comments section before sending the candidate to the Hire for Attitude test
      operationId: postHFATestQuestion
      produces:
      - application/json
      parameters:
      - name: applicationId
        in: query
        required: true
        type: string
      - name: updateHFAInput
        in: body
        required: false
        schema:
          $ref: "#/definitions/HFAUpdateInput"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Update of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"


  /candidate/application/offerAccepted:
    post:
      tags:
      - "application"
      summary: The Candidate accepts the offer that is extended to him
      operationId: acceptOffer
      parameters:
      - name: offerData
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferAcceptedInput"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Creation of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"


  /candidate/application/offerDeclined:
    post:
      tags:
      - "application"
      summary: Declines the offer that has been extended to the candidate and updates SF with additional comments
      operationId: declineOffer
      parameters:
      - name: offerData
        in: body
        required: true
        schema:
          $ref: "#/definitions/OfferNotAcceptedInput"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Update of JobApplication failed"
          schema: 
            $ref: "#/definitions/ResponseData"

#######################################################################################################
#######################################################################################################
############################################ Hiring Manager ###########################################
#######################################################################################################
#######################################################################################################

  /hm/searchCandidate:
    post:
      tags:
        - hiringmanager
      summary: >-
        Allows the hiring manager to search for candidates based on firstname,
        lastname, email and phone
      operationId: searchCandidate
      parameters:
        - name: searchData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CandidateSearchInput'
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CandidateSearchResultList'
            
            
  /hm/getScheduledInterviews:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the upcoming Interviews for the Hiring Manager"
      operationId: getScheduledInterviews
      parameters:
      - name: hiringmanager
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: results
            type: array
            items:
              title: interview
              type: object
              properties:
                role:
                  type: string
                interviewDate:
                  type: string
                fullname: 
                  type: string
                candidateId: 
                  type: string
                applicationId:
                  type: string
                interviewId:
                  type: string
                requisitionId:
                  type: string
                completed:
                  type: boolean

  /hm/getInterviewSummary:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the details for the candidate interview details. In case there is no Application, then only Candidate related information"
      operationId: getInterviewSummary
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      - name: applicationId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: interviewSummary
            type: object
            properties:
              jobTitle: 
                type: string
              requisitionId:
                type: string
              applicationId:
                type: string
              interviewId:
                type: string
              gtkyPassed:
                type: boolean
              gtkyScore:
                type: string
              gtkyDate:
                type: string
              interests:
                type: string
              goals:
                type: string
              wooliesFitScore:
                type: string
              wooliesFitBenchmark:
                type: string
              wooliesFitDate:
                type: string

  /hm/getAssessmentDetails:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the test details for GTKY and the Woolies Fit test"
      operationId: getAssessmentDetails
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: Assessment
            type: object
            properties:
              gtkyStatus:
                $ref: "#/definitions/PicklistOption"
              gtkyOverallScore: 
                type: string
              gtkyOverallBenchmark:
                $ref: "#/definitions/PicklistOption"
              gtkyDate:
                type: string
              gtkyAnswers:
                type: array
                items:
                  $ref: "#/definitions/GTKYAnswer"
              wooliesFitTest:
                $ref: "#/definitions/WooliesFitResult"

  
  /hm/getCandidateExperience:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the work experience for the candidate"
      operationId: getCandidateExperience
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      - name: timeZone
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: CandidateExperience
            type: object
            properties:
              hadPreviousExprience:
                type: boolean
              workedAtWow:
                type: boolean
              formerEmployeeId:
                type: string
              cvAttachmentId:
                type: string
              outsideWorkExperience:
                $ref: "#/definitions/OutsideWorkExperience"

  /hm/getCandidateDetails:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the details to a candidate"
      operationId: getCandidateDetails
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: CandidateForHM
            type: object
            properties:
              candidateSummary:
                $ref: "#/definitions/CandidateSummaryBody"
              recentActivity:
                $ref: "#/definitions/CandidateActivityList"

  /hm/getJobInfoToApplication:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the Job information to an application"
      operationId: getJobInformation
      parameters:
      - name: applicationId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: JobInformation
            type: object
            properties:
              requisitionId:
                type: string
              jobTitle:
                type: string
              store:
                type: string
            
  /hm/upsertInterviewFeedBack:
    post:
      tags:
      - "hiringmanager"
      summary: Updates the Interview details and suitablity
      operationId: interviewFeedBack
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "query"
        required: true
        type: string
      - name: interviewDetails
        in: body
        required: true
        schema:
            $ref: '#/definitions/InterviewDetails'
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ResponseData"
        400:
          description: "Update of Interview FeedBack failed"
          schema: 
            $ref: "#/definitions/ResponseData"
  
  /hm/getOpenReqs:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the Job requisitions"
      operationId: getOpenReqs
      parameters:
      - name: hiringmanagerId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: "#/definitions/OpenRequisitionList"
                
  /hm/forwardCandidateToReq:
    post:
      tags:
      - "hiringmanager"
      summary: "Forwardds a candidate to a requisition"
      operationId: forwardCandidateToReq
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      - name: requisitionId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: "#/definitions/ResponseData"
      
  /hm/getNameFromUser:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the username for the logged in Hiring Manager"
      operationId: getNameFromUser
      parameters:
      - name: hiringmanagerId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: HiringManagerHeader
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              jobTitle:
                type: string
              userName:
                type: string
                
  /hm/getAssessmentHeader:
    get:
      tags:
      - "hiringmanager"
      summary: "Retrieves the Getting to Know You details for a Candidate"
      operationId: getAssessmentHeader
      parameters:
      - name: candidateId
        in: query
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            title: AssessmentHeader
            type: object
            properties:
              gtky:
                title: GTKYHeader
                type: object
                properties:
                  gtkyPassed:
                    type: boolean
                  gtkyScore:
                    type: string
                  gtkyBenchmark:
                    $ref: "#/definitions/PicklistOption"
                  gtkyDate:
                    type: string
              wooliesFit:
                title: WooliesFitHeader
                type: object
                properties:
                  wooliesFitScore:
                    type: string
                  wooliesFitBenchmark:
                    type: string
                  wooliesFitDate:
                    type: string

  /hm/upsertCandidate:
    post:
      tags:
      - "hiringmanager"
      summary: "Create or updates candidate"
      description: "Creates a candidate if no candidate id is provided. Update the candidate if candidate id is provided in query string."
      operationId: "upsertCandidateHM"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "candidateData"
        description: "Posted candidate object"
        required: true 
        schema:
            $ref: "#/definitions/UpsertCandidate"
      - name: "candidateId"
        in: "query"
        description: "Field name eg candidate Id"
        required: true
        type: string      
      responses:
        200:
          description: "successful operation"
          schema:  
            $ref: "#/definitions/ResponseData"
        400:
          description: "Invalid email supplied"
        404:
          description: "Candidate not found"    

  
          
#######################################################################################################
#######################################################################################################
############################################ Definitions ##############################################
#######################################################################################################
#######################################################################################################

definitions:
  ResponseData:
    type: "object"
    properties:
      candidateId:
        type: "string"
      editStatus:
        type: "string"
      status:
        type: "string"
      message:
        type: "string"  
    xml:
      name: "User"    
      
  UploadResume:
    type: "object"
    properties:
      attachmentId:
        type: "string"
      editStatus:
        type: "string"
      status:
        type: "string"
      message:
        type: "string"    
      
  UpsertCandidate:
    type: "string"
    properties:
      candidateData:
        type: "string"
    xml:
      name: "User"            
 
  Picklist:
    type: "object"
    properties:
      PickListValues:
        type: array
        items:
          $ref: '#/definitions/PicklistOption'
  
  PicklistOption:
    type: object
    properties:
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode:
        type: string
      locale: 
        type: string
        
  PicklistOptionWithBGElement:
    type: object
    properties:
      backgroundElementId:
        type: string
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode:
        type: string
      locale: 
        type: string      

  CandidateSummaryBody:
    type: object
    properties:
      candidateId:
        type: string
      firstName: 
        type: string
      lastName:
        type: string
      preferredName: 
        type: string
      address: 
        type: string
      address2:
        type: string
      zip:
        type: string
      cellPhone:
        type: string
      homePhone:
        type: string
      candInterest:
        type: string
      candidateInterest:
        description: "Is the candidate still interested in further roles?"
        $ref: "#/definitions/PicklistOption"
      phoneCountryCode1:
        $ref: "#/definitions/PicklistOption"
      candGoals:
        type: string
      city:
        type: string
      contactEmail:
        type: string
      primaryEmail:
        type: string
      country:
        type: string
      hoursPerWeek:
        type: string
      formerEmployeeYes:
        type: string
      dateOfBirth:
        type: string
      profileFileName:
        type: string
      state:
        $ref: "#/definitions/PicklistOption"
      workRight:
        $ref: "#/definitions/PicklistOption"
      phoneCountryCodeAlt:
        $ref: "#/definitions/PicklistOption"
      race:
        $ref: "#/definitions/PicklistOption"
      title:
        $ref: "#/definitions/PicklistOption"
      criminalConviction:
        $ref: "#/definitions/PicklistOption"
      candAvailability:
        $ref: "#/definitions/CandAvailability"
      preferredRoles:
        $ref: "#/definitions/PreferredRolesWithBGElement"
      stores:
        $ref: "#/definitions/PreferredStores"
      outsideWorkExperience:
        $ref: "#/definitions/OutsideWorkExperience"
      previousEmployee:
        $ref: "#/definitions/PicklistOption"
      disability:
        $ref: "#/definitions/PicklistOption"
      gender:
        $ref: "#/definitions/PicklistOption"
      sendEmail:
        $ref: "#/definitions/PicklistOption"
      

  CandidateHeader:
    type: object
    properties:
      candidateId:
        type: string
      firstName: 
        type: string
      lastName:
        type: string
      preferredName: 
        type: string
      fullName:
        type: string
  
        
  CandAvailability:
    type: array
    title: results
    items:
      $ref: "#/definitions/CandAvailabiltiyItem"
  
  
  CandAvailabiltiyItem:
    type: object
    properties:
      weekDay: 
        $ref: "#/definitions/PicklistOptionWithBGElement"
      times:
        type: array
        title: times
        items:
          $ref: "#/definitions/PicklistOptionWithBGElement"  
        
  PreferredRolesWithBGElement:
    type: array
    title: results
    items:
      $ref: "#/definitions/PicklistOptionWithBGElement"    
                
  PreferredStores:
    type: array
    title: results
    items:
      $ref: "#/definitions/PreferredStoresItem"
    
  PreferredStoresItem:
    type: object
    properties:
      backgroundElementId:
        type: string
      state:
        type: string
      suburb:
        type: string
      number:
        type: string
      store:
        type: string
      postcode:
        type: string
      name:
        type: string
 
  AttachmentInputData:
    type: object
    properties:
      attachmentId:
        type: string
   
  OutsideWorkExperienceItem:
    type: object
    properties:
      backgroundElementId:
        type: string
      startTitle:
        type: string
      employer:
        type: string
      jobBrief:
        type: string
      startDate:
        type: string
#        format: date
      endDate:
        type: string
#        format: date
        
  OutsideWorkExperience:
    type: array
    title: results
    items:
      $ref: "#/definitions/OutsideWorkExperienceItem"
  
  OpenRequisitionList:
    type: array
    items:
      $ref: "#/definitions/OpenRequisition"
  
  OpenRequisition:
    type: object
    properties:
      requisitionId:
        type: string
      jobTitle: 
        type: string
      status:
        type: string
      
  CandidateAgendaList:
    type: array
    items:
      $ref: "#/definitions/CandidateAgenda"

  CandidateAgenda:
    type: object
    properties:
      roleName:
        description: "to be read from the External Title of the Job Requisition"
        type: string
      startDate: 
        type: string
      interviewer:
        type: string
      interviewerRole:
        type: string
      status:
        type: string
      notes:
        description: "to be used for indicating the store location"
        type: string
      locationAddress:
        type: string

  ApplicationDetails:
    type: object
    properties:
      applicationId: 
        type: string
      requisitionId:
        type: string
      jobTitle:
        type: string
      jobDescription:
        type: string
      hiringManager: 
        type: string
      location:
        type: string
      date:
        type: string
      status:
        type: string
      
  CandidateNotInterestedInput:
    type: object
    properties:
      requisitionId: 
        type: string
      notInterestedReason:
        description: "Only needs to be specified in case the Candidate is rejecting"
        $ref: "#/definitions/PicklistOption"
      sendEmail:
        description: "Sends email if candidate needs email communication on opening"
        $ref: "#/definitions/PicklistOption" 
      candidateInterest:
        description: "Indicates if candidate is still interested in a role at Woolworth"
        $ref: "#/definitions/PicklistOption" 
      notInterestedComment:
        description: "Optional field for comments by the candidate"
        type: string
      interestedInFurtherRoles:
        description: "Set if the Candidate is still interested in Roles"
        type: boolean
  
  OfferNotAcceptedInput:
    type: object
    properties:
      applicationId: 
        type: string
      notInterestedReason:
        description: "Only needs to be specified in case the Candidate is rejecting. This only requires the picklistOptionId"
        $ref: "#/definitions/PicklistOption"
      sendEmail:
        description: "Sends email if candidate needs email communication on opening"
        $ref: "#/definitions/PicklistOption" 
      notInterestedComment:
        description: "Optional field for comments by the candidate"
        type: string
      candidateInterest:
        description: "Indicates if candidate is still interested in a role at Woolworth"
        $ref: "#/definitions/PicklistOption" 
      interestedInFurtherRoles:
        description: "Set if the Candidate is still interested in Roles"
        type: boolean
  
  OfferAcceptedInput:
    type: object
    properties:
      applicationId: 
        type: string
      dateOfBirth:
        type: string
      gender:
        description: this only requires the picklistOptionId
        $ref: "#/definitions/PicklistOption"
      disability:
        description: this only requires the picklistOptionId
        $ref: "#/definitions/PicklistOption"
  
  CandidatePassword:
    type: object
    properties:
      password:
        type: string
        format: password
        
  HFATestDetails:
    type: object
    properties:
      hfaLink: 
        type: string
        
  HFAUpdateInput:
    type: object
    properties:
      comment:
        type: string

  CandidateSearchResult:
    type: object
    properties:
      candidateId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      preferredName:
        type: string
      fullName:
        type: string
      email:
        type: string
      address:
        type: string
      phone:
        type: string
      gtkyStatus:
        type: string
        
  CandidateSearchResultList:
    type: object
    properties:
      searchCriteria:
        $ref: '#/definitions/CandidateSearchInput'
      results:
        type: array
        items:
          $ref: '#/definitions/CandidateSearchResult'
          
  CandidateSearchInput:
    type: object
    properties:
      currentPage:
        type: string
      searchInput:
        type: array
        items:
          $ref: "#/definitions/KeyValue"

  KeyValue:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
        
  
  GTKYAnswer:
    type: object
    properties:
      questionId:
        type: string
      questionText: 
        type: string
      answerId: 
        $ref: "#/definitions/PicklistOption"
      answerWeight: 
        type: string
  
  WooliesFitMeasure:
    type: object
    properties:
      band: 
        type: string
      score:
        type: string
      measureNumber:
        type: string
      measureText:
        type: string
        
  WooliesFitResult:
    type: object
    properties:
      testDate:
        type: string
      orderId:
        type: string
      overallBenchmark: 
        type: string
      overallScore:
        type: string
      measures:
        type: array
        items:
          $ref: "#/definitions/WooliesFitMeasure"
      
  CandidateActivity:
    type: object
    properties:
      date: 
        type: string
      jobTitle: 
        type: string
      location:
        type: string
      interviewComments:
        type: string
      interviewer:
        type: string
      wasConsidered:
        type: boolean
  
  Email:
    type: object
    properties:
      SubscriberKey: 
        type: string
      Address: 
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Body:
        type: string  
      
  CandidateActivityList:
    type: array
    items:
      $ref: "#/definitions/CandidateActivity"
  
  InterviewDetails:
    type: object
    properties:
      interviewer:
        type: string
      interviewerName:
        type: string
      interviewDate:
        type: string
      interviewOutcome:
        type: string
      interviewerComments:
        type: string
      requisitionId:
        type: string
      requisitiontitle:
        type: string
  
  CandidateData:
    type: object
    properties:
      candidateId:
        type: string
      firstName: 
        type: string
      lastName:
        type: string
      cellPhone:
        type: string
  
      
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"