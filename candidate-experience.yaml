# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.3"
  title: Candidate Experience

# Describe your paths here
paths:
  /picklist:
    get:
      description: This is my picklist service
      operationId: getPicklist
      produces:
        - application/json
      parameters:
        #these are some parameters
        -
          name: picklistId
          in: query
          description: the ID of the picklist. Can be a comma separated list
          required: true
          type: string  
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Picklist'


  /candidate/{id}:
    get:
      description: Reads a candidate by the candidateId
      operationId: getCandidate
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Candidate ID
          required: true
          type: integer 
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Candidate'
          
  /candidate/exists:
    get:
      description: check whether a candidate already exists
      operationId: checkCandidate
      produces:
        - application/json
      parameters:
        - in: query
          name: email
          description: Email of the Candidate
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: boolean

  /candidate/{id}/generatequiz:
    get:
      description: Generates new Quiz Questions for a Candidate
      operationId: generateQuiz
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Candidate ID
          required: true
          type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: boolean
      
  /candidate/{id}/evaluatequiz:
    post:
      description: Evaluates the score of the quiz
      operationId: evaluateQuiz
      produces: 
        - application/json
      parameters: 
        - in: path
          name: id 
          description: Candidate ID 
          required: true
          type: integer
      responses:
        200:
          description: operation successful
          schema:
            $ref: '#/definitions/GTKYQuizResult'            

definitions:
  PicklistItem:
    type: object
    properties:
      label:
        type: string
      picklistId:
        type: string
      picklistOptionId:
        type: string
      externalCode: 
        type: string
      locale: 
        type: string


  Picklist:
    type: object
    properties: 
      name: 
        type: string
      values:
        type: array
        items:
          $ref: '#/definitions/PicklistItem'

  PicklistOption:
    type: object
    properties:
      id: 
        type: string
  
  
  PreferredLocation:
    type: object
    properties:
      state: 
        type: string
      statePicklistId:
        type: string
      store:
        type: string
      storePicklistId:
        type: string
      suburb: 
        type: string
      suburbPicklistId:
        type: string
        
  PreferredRole:
    type: object
    properties:
      role:
        type: string

  GTKYAnswer:
    type: object
    properties:
      answerId:
        type: string
      answerText: 
        type: string
    
  GTKYQuestion:
    type: object
    properties:
      questionId:
        type: string
      questionText:
        type: string
      imageLink:
        type: string
      answers:
        title: answers
        type: array
        items:
          $ref: '#/definitions/GTKYAnswer'
    
  GTKYQuizResult:
    type: object
    properties:
      gtkyExpiry: 
        type: string
      

    
  Candidate:
    type: object
    properties:
      candidateId:
        type: string
      address:
        type: string
      address2:
        type: string
      city:
        type: string
      zip:
        type: string
      agreeToPrivacyStatement:
        $ref: '#/definitions/PicklistOption'
      cellPhone:
        type: string
      contactEmail:
        type: string
      primaryEmail:
        type: string
      country:
        type: string
      creationDateTime:
        type: string
        format: date
      dateOfBirth:
        type: string
        format: date
      dateofAvailability:
        type: string	
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string	
      preferredName:
        type: string	
      formerEmployeeYes:
        type: string	
      homePhone:
        type: string
      lastLoginDateTime:
        type: string	
        format: date
      privacyAcceptDateTime:
        type: string
        format: date	
      visaExpiration:	
        type: string
        format: date	
      visaNumber:
        type: string
      preferredLocations:
        type: array
        items:
          $ref: '#/definitions/PreferredLocation'
      preferredRoles:
        type: array
        items:
          $ref: '#/definitions/PreferredRole'
      gtkyQuestions:
        type: array
        items:
          $ref: '#/definitions/GTKYQuestion'
        
      
    
